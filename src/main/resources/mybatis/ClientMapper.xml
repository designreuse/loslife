<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.asgab.repository.ClientMapper">

    <sql id="client_columns">
        name, brand, address, industry_id, whether_channel, channel, currency_id, cross_regional
    </sql>
    
    <sql id="client_columns_for_join">
        a.name, a.brand, a.address, a.industry_id, a.whether_channel, a.channel, a.currency_id, a.cross_regional
    </sql>
    
	<select id="get" parameterType="long" resultType="Client">
		select a.id, <include refid="client_columns_for_join" />, GROUP_CONCAT(b.`share_id`) as userIds
		from clients a left join share_clients b on a.id = b.client_id
		where a.id = #{id}
	</select>

	<select id="search" parameterType="map" resultType="Client">
		select a.id, <include refid="client_columns_for_join" />, b.channel_name as channel_name, c.name as industry_name
		from clients a left join channels b on a.channel = b.id left join industries c on a.industry_id = c.id
		where 1 = 1
		<if test="name != null">
			and a.name like "%"#{name}"%"
		</if>
		<if test="brand != null">
			and a.brand like "%"#{brand}"%"
		</if>
		<if test="sort != null and sort!=''">
			order by ${sort}
		</if>
	</select>
	
	<select id="count" parameterType="map" resultType="int">
		select count(1) 
		from clients where 1 = 1
		<if test="name != null">
			and name like "%"#{name}"%"
		</if>
		<if test="brand != null">
			and brand like "%"#{brand}"%"
		</if>
	</select>

	<insert id="save" parameterType="Client" useGeneratedKeys="true" keyProperty="id">
		insert into clients (<include refid="client_columns" />)
		values ( #{name}, #{brand}, #{address}, #{industry_id}, #{whether_channel}, #{channel}, #{currency_id}, #{cross_regional} )
	</insert>
	
	<update id="update" parameterType="Client">
		update clients set 
			name = #{name}, brand = #{brand}, address = #{address}, industry_id = #{industry_id}, whether_channel = #{whether_channel}, 
			channel = #{channel}, currency_id = #{currency_id}, cross_regional = #{cross_regional}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="long">
	     update clients set deleted=2 where id=#{id}
	</delete>
	
</mapper> 