<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.asgab.repository.ClientMapper">

    <sql id="client_columns">
  		clientname,brand,industry_id,whether_channel,channel,currency_id,address,whether_cross_district,
  		company_name,website_name,website_address,organization_code,icp,business_licence,organization_code_scan_file,
 		business_licence_scan_file,icp_scan_file,platform,status,created_at,user_id,updated_at
    </sql>
    
    <sql id="client_columns_for_join">
        a.clientname,a.brand,a.industry_id,a.whether_channel,a.channel,a.currency_id,a.address,a.whether_cross_district,
  		a.company_name,a.website_name,a.website_address,a.organization_code,a.icp,a.business_licence,a.organization_code_scan_file,
 		a.business_licence_scan_file,a.icp_scan_file,a.platform,a.status,a.created_at,a.user_id,a.updated_at
    </sql>
    
    
	<select id="get" parameterType="long" resultType="Client">
		select a.id, <include refid="client_columns_for_join" /> ,c.channel_name as channel_name,GROUP_CONCAT(d.`id`) as saleIds, GROUP_CONCAT(d.`name`) as saleNames
		from xmo.clients a 
		left join sales_booking_production.share_clients b on a.id = b.client_id 
		left join xmo.users d on b.share_id = d.id
		left join sales_booking_production.channels c on a.channel = c.id
		where a.id = #{id}
	</select>

	<select id="search" parameterType="map" resultType="Client">
		select a.id, <include refid="client_columns_for_join" />, c.channel_name as channel_name,GROUP_CONCAT(d.`id`) as saleIds, GROUP_CONCAT(d.`name`) as saleNames
		from xmo.clients a 
		left join sales_booking_production.share_clients b on a.id = b.client_id
		left join xmo.users d on b.share_id = d.id
		left join sales_booking_production.channels c on a.channel = c.id 
		where 1 = 1
		<if test="fmt_clientNumber != null">
			and CAST(a.id AS CHAR) = #{fmt_clientNumber}
		</if>
		<if test="clientname != null">
			and a.clientname like "%"#{clientname}"%"
		</if>
		<if test="brand != null">
			and a.brand like "%"#{brand}"%"
		</if>
		<if test="channel != null">
			and a.channel = #{channel}
		</if>
		<if test="industry_id != null">
			and a.industry_id = #{industry_id}
		</if>
		<if test="platform != null">
			and a.platform like "%"#{platform}"%"
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		
		<!-- 三个 OR 关系 -->
		<if test="or_clientname != null || or_brand != null || or_channel_name != null">
		    and
		    (
		    	1 = 2
		    	<if test="or_clientname != null">
		    	    or a.clientname like "%"#{or_clientname}"%"
		    	</if>
		    	<if test="or_brand != null">
		    	    or a.brand like "%"#{or_brand}"%"
		    	</if>
		    	<if test="or_channel_name != null">
		    	    or c.channel_name like "%"#{or_channel_name}"%"
		    	</if>
		    )
		</if>
		
		<if test="createDateStart != null">
			<![CDATA[
			and a.created_at >= #{createDateStart}
			]]>
		</if>
		<if test="createDateEnd != null">
			<![CDATA[
			and a.created_at <=  #{createDateEnd}
			]]>
		</if>
		<if test="saleIds != null">
			and EXISTS
		    (
		    	select 1 from sales_booking_production.share_clients where client_id = a.id and share_id = #{saleIds}
		    )
		</if>
		group by a.id
		<if test="sort != null and sort!=''">
			order by ${sort}
		</if>
	</select>
	
	<select id="count" parameterType="map" resultType="int">
	select count(1) from (
		select count(1) 
		from xmo.clients a 
		left join sales_booking_production.share_clients b on a.id = b.client_id
		left join xmo.users d on b.share_id = d.id
		left join sales_booking_production.channels c on a.channel = c.id 
		where 1 = 1
		<if test="fmt_clientNumber != null">
			and CAST(a.id AS CHAR) = #{fmt_clientNumber}
		</if>
		<if test="clientname != null">
			and a.clientname like "%"#{clientname}"%"
		</if>
		<if test="brand != null">
			and a.brand like "%"#{brand}"%"
		</if>
		<if test="channel != null">
			and a.channel = #{channel}
		</if>
		<if test="industry_id != null">
			and a.industry_id = #{industry_id}
		</if>
		<if test="platform != null">
			and a.platform like "%"#{platform}"%"
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		<!-- 三个 OR 关系 -->
		<if test="or_clientname != null || or_brand != null || or_channel_name != null">
		    and
		    (
		    	1 = 2
		    	<if test="or_clientname != null">
		    	    or a.clientname like "%"#{or_clientname}"%"
		    	</if>
		    	<if test="or_brand != null">
		    	    or a.brand like "%"#{or_brand}"%"
		    	</if>
		    	<if test="or_channel_name != null">
		    	    or c.channel_name like "%"#{or_channel_name}"%"
		    	</if>
		    )
		</if>
		
		<if test="createDateStart != null">
			<![CDATA[
			and a.created_at >= #{createDateStart}
			]]>
		</if>
		<if test="createDateEnd != null">
			<![CDATA[
			and a.created_at <=  #{createDateEnd}
			]]>
		</if>
		<if test="saleIds != null">
		    and EXISTS
		    (
		    	select 1 from sales_booking_production.share_clients where client_id = a.id and share_id = #{saleIds}
		    )
		</if>
		group by a.id) t 
	</select>

	<insert id="save" parameterType="Client" useGeneratedKeys="true" keyProperty="id">
		insert into xmo.clients (<include refid="client_columns" />)
		values ( #{clientname},#{brand},#{industry_id},#{whether_channel},#{channel},#{currency_id},
		#{address},#{whether_cross_district},#{company_name},#{website_name},#{website_address},
		#{organization_code},#{icp},#{business_licence},#{organization_code_scan_file},#{business_licence_scan_file},
		#{icp_scan_file},#{platform},#{status},#{created_at},#{user_id},#{updated_at})
	</insert>
	
	<update id="update" parameterType="Client">
		update xmo.clients set 
			clientname=#{clientname},brand=#{brand},industry_id=#{industry_id},whether_channel=#{whether_channel},
			channel=#{channel},currency_id=#{currency_id},address=#{address},whether_cross_district=#{whether_cross_district},
  			company_name=#{company_name},website_name=#{website_name},website_address=#{website_address},
  			organization_code=#{organization_code},icp=#{icp},business_licence=#{business_licence},organization_code_scan_file=#{organization_code_scan_file},
 			business_licence_scan_file=#{business_licence_scan_file},icp_scan_file=#{icp_scan_file},platform=#{platform},status=#{status},
 			updated_at=#{updated_at}
		where id = #{id}
	</update>
	
	<select id="getClientsByIdList" parameterType="list" resultType="Client">
		select a.id,<include refid="client_columns_for_join" />, c.channel_name as channel_name from xmo.clients a
		left join sales_booking_production.channels c on a.channel = c.id
		where a.id in
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</select>
	
</mapper> 